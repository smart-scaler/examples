{{- if or (has "all" $.Values.provision) (has "catalog-db-total" $.Values.provision)}}
{{- range $namespace := $.Values.namespace }}
  {{- range $copy := untilStep 0 ($.Values.copies | int) 1 }}
---
apiVersion: v1
kind: Service
metadata:
  name: catalog-mongo-{{$copy}}
  namespace: {{ $namespace.config.name }}
  labels:
    app: acmefit
    service: catalog-db-{{$copy}}
spec:
  ports:
    - port: 27017
      name: mongo-catalog
      protocol: TCP
  selector:
    app: acmefit
    service: catalog-db-{{$copy}}
---
{{- if $.Values.stateful}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: catalog-mongodata-pv
  namespace: {{ $namespace.config.name }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
{{- end }}
---
apiVersion: apps/v1
{{- if $.Values.stateful}}
kind: StatefulSet
  {{- else }}
kind: Deployment
  {{- end }}
metadata:
  name: catalog-mongo-{{ $namespace.config.name }}-{{$copy}}
  namespace: {{ $namespace.config.name }}
  labels:
    app: acmefit
    service: catalog-db-{{$copy}}
spec:
  {{- if $.Values.stateful}}
  serviceName: catalog-db-{{$copy}}
  {{- end }}
  selector:
    matchLabels:
      app: acmefit  # has to match .spec.template.metadata.labels
      service: catalog-db-{{$copy}}
  replicas: 1
  template:
    metadata:
      labels:
        app: acmefit  # has to match .spec.selector.matchLabels
        service: catalog-db-{{$copy}}
    spec:
      containers:
        - name: catalog-mongo
          image: mongo:4
          resources:
            {}
          ports:
            - name: catalog-mongo
              containerPort: 27017
              protocol: "TCP"
          env:
          - name: MONGO_INITDB_ROOT_USERNAME
            value: 'mongoadmin'
          - name: MONGO_INITDB_DATABASE
            value: 'acmefit'
          - name: MONGO_INITDB_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: catalog-mongo-pass
                key: password
          volumeMounts:
            - mountPath: /data/db
              name: catalog-mongodata
            - mountPath: /docker-entrypoint-initdb.d
              name: mongo-initdb
      volumes:
        {{- if $.Values.stateful}}
        - name: catalog-mongodata
          persistentVolumeClaim:
            claimName: catalog-mongodata-pv
        {{- else }}
        - name: catalog-mongodata
          emptyDir: {}
        {{- end }}
        - name: mongo-initdb
          configMap:
            name: catalog-initdb-config-{{$copy}}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: catalog-mongo-{{$copy}}
  namespace: {{ $namespace.config.name }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: catalog-mongo-{{ $namespace.config.name }}-{{$copy}}
  minReplicas: 1
  maxReplicas: 50
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 85
---
{{- end }}
{{- end }}
{{- end }}